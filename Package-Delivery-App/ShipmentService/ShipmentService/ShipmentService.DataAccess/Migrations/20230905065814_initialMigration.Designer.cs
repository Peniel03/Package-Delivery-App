// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShipmentService.DataAccess.DataContext;

#nullable disable

namespace ShipmentService.DataAccess.Migrations
{
    [DbContext(typeof(ShipmentContext))]
    [Migration("20230905065814_initialMigration")]
    partial class initialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ShipmentService.DataAccess.Models.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Locations", (string)null);
                });

            modelBuilder.Entity("ShipmentService.DataAccess.Models.Package", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ContentDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dimensions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OwnerId")
                        .HasColumnType("int");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Packages", (string)null);
                });

            modelBuilder.Entity("ShipmentService.DataAccess.Models.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.ToTable("Persons", (string)null);
                });

            modelBuilder.Entity("ShipmentService.DataAccess.Models.Shipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTimeOffset>("ActualDeliveryDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeliveryMethod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DestinationLocationId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("EstimatedDeliveryDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("PackageId")
                        .HasColumnType("int");

                    b.Property<int>("PickUpLocationId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("PickupDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("RecipientId")
                        .HasColumnType("int");

                    b.Property<int>("SenderId")
                        .HasColumnType("int");

                    b.Property<decimal>("ShipmentCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ShipmentStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrackingNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DestinationLocationId");

                    b.HasIndex("PackageId")
                        .IsUnique();

                    b.HasIndex("RecipientId");

                    b.ToTable("Shipments", (string)null);
                });

            modelBuilder.Entity("ShipmentService.DataAccess.Models.Package", b =>
                {
                    b.HasOne("ShipmentService.DataAccess.Models.Person", "Person")
                        .WithMany("Packages")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("ShipmentService.DataAccess.Models.Person", b =>
                {
                    b.HasOne("ShipmentService.DataAccess.Models.Location", "Location")
                        .WithMany("Persons")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");
                });

            modelBuilder.Entity("ShipmentService.DataAccess.Models.Shipment", b =>
                {
                    b.HasOne("ShipmentService.DataAccess.Models.Location", "Location")
                        .WithMany("Shipements")
                        .HasForeignKey("DestinationLocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShipmentService.DataAccess.Models.Package", "Package")
                        .WithOne("Shipment")
                        .HasForeignKey("ShipmentService.DataAccess.Models.Shipment", "PackageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShipmentService.DataAccess.Models.Person", "Person")
                        .WithMany("shipments")
                        .HasForeignKey("RecipientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");

                    b.Navigation("Package");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("ShipmentService.DataAccess.Models.Location", b =>
                {
                    b.Navigation("Persons");

                    b.Navigation("Shipements");
                });

            modelBuilder.Entity("ShipmentService.DataAccess.Models.Package", b =>
                {
                    b.Navigation("Shipment")
                        .IsRequired();
                });

            modelBuilder.Entity("ShipmentService.DataAccess.Models.Person", b =>
                {
                    b.Navigation("Packages");

                    b.Navigation("shipments");
                });
#pragma warning restore 612, 618
        }
    }
}
